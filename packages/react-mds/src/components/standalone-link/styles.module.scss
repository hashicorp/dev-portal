@use '../../styles/mixins/focus-ring' as *;

$standalone-link-border-width: 1px;
$standalone-link-focus-border-radius: 5px;

// this is how much the focus is visually "shifted" from the bounding box of the
// notice: you have to take in account also the inset shadow of the focus (see Figma file and also "focus-ring" mixin)
$standalone-link-focus-shift: 4px;

.standalone-link {
	display: flex;
	gap: 0.25rem;
	align-items: center;
	justify-content: center;
	width: fit-content;
	padding-top: 4px;
	padding-bottom: 4px;
	font-weight: var(--mds-typography-font-weight-medium);
	font-family: var(--mds-typography-font-stack-text);
	background-color: transparent; // needs to exist for a11y
	border: $standalone-link-border-width solid transparent; // needs to exist AND be transparent for a11y
	// notice: the text decoration is applied directly to the "text" container because of a bug in Safari (see https://github.com/hashicorp/design-system-components/issues/159)
	text-decoration-color: transparent;
	cursor: pointer;

	// the position absolute of an element is computed from the inside of the border of the container
	// so we have to take in account the border width of the pseudo-element container itself
	$shift: $standalone-link-focus-shift + $standalone-link-border-width;
	// for visual/optical balance we add an extra 2px to the "shift" near the text (opposite the icon)
	$shift-extra: $shift + 2px;

	// notice: this is used not only for the focus, but also to increase the clickable area
	@include hds-focus-ring-with-pseudo-element(
		$right: -$shift,
		$left: -$shift,
		$radius: $standalone-link-focus-border-radius
	);

	// we need to override a couple of values for better visual alignment
	&.icon-position-leading::before {
		right: -$shift-extra;
	}

	&.icon-position-trailing::before {
		left: -$shift-extra;
	}

	& svg {
		transition: color 0.15s ease-in;
	}
}

.text {
	flex: 1 0 0;
	text-decoration: underline;
	text-decoration-color: transparent;
	transition: text-decoration-color 0.15s ease-in, color 0.15s ease-in;
}

.size-small {
	& .text {
		font-size: var(--mds-typography-body-100-font-size);
		line-height: var(--mds-typography-body-100-line-height);
	}
}

.size-medium {
	& .text {
		font-size: var(--mds-typography-body-200-font-size);
		line-height: var(--mds-typography-body-200-line-height);
	}
}

.size-large {
	& .text {
		font-size: var(--mds-typography-body-300-font-size);
		line-height: var(--mds-typography-body-300-line-height);
	}
}

.color-primary {
	color: var(--token-color-foreground-action);

	&:hover {
		color: var(--token-color-foreground-action-hover);

		.text {
			text-decoration-color: #4e81e8; // custom color by design
		}
	}

	&:active {
		color: var(--token-color-foreground-action-active);

		.text {
			text-decoration-color: #396ed6; // custom color by design
		}

		&::before {
			background-color: var(--token-color-surface-action);
		}
	}
}

.color-secondary {
	color: var(--token-color-foreground-strong);

	&:hover {
		.text {
			text-decoration-color: #4d4d4f; // custom color by design
		}
	}

	&:active {
		color: var(--token-color-foreground-primary);

		.text {
			text-decoration-color: #6e7075; // custom color by design
		}

		&::before {
			background-color: var(--token-color-surface-interactive-active);
		}
	}
}

:global(.mds-dark-mode), :global([data-theme="dark"]) {
	& .color-secondary {
		&:hover {
			.text {
				text-decoration-color: var(--token-color-foreground-strong);
			}
		}
	
		&:active {
			.text {
				text-decoration-color: var(--token-color-foreground-strong);
			}
		}
	}
}

.color-secondary-inverted {
	color: var(--token-color-palette-neutral-50);

	&:hover {
		color: var(--token-color-palette-neutral-300);

		.text {
			text-decoration-color: var(--token-color-palette-neutral-300);
		}
	}

	&:active {
		color: var(--token-color-palette-neutral-300);

		.text {
			text-decoration-color: var(--token-color-palette-neutral-300);
		}

		&::before {
			background-color: var(--token-color-palette-neutral-600);
		}
	}
}
