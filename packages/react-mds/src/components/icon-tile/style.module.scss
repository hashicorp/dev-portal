$hds-icon-tile-sizes: ( "small", "medium", "large" );
$hds-icon-tile-colors-products: ( "boundary", "consul", "hcp", "nomad", "packer", "terraform", "vagrant", "vault", "vault-secrets", "waypoint" );
$size-props: (
  "small": (
    "size": 1.75rem, // 28px
    "border-radius": 5px,
    "icon-size": 1rem, // 16px
    "logo-size": 1.125rem, // 18px
    "extra-size": 1.125rem, // 18px
    "extra-border-radius": 4px,
  ),
  "medium": (
    "size": 2.5rem, // 40px
    "border-radius": 6px,
    "icon-size": 1.5rem, // 24px
    "logo-size": 1.75rem, // 28px
    "extra-size": 1.5rem, // 24px
    "extra-border-radius": 5px,
  ),
  "large": (
    "size": 3rem, // 48px
    "border-radius": 6px,
    "icon-size": 1.5rem, // 24px
    "logo-size": 2rem, // 32px
    "extra-size": 1.5rem, // 24px
    "extra-border-radius": 5px,
  )
);


.icon-tile {
  position: relative;
  display: flex;
  border: 1px solid transparent;
  border-radius: 4px;
  box-shadow: var(--token-elevation-low-box-shadow);
}

.icon,
.logo {
  display: flex;
  margin: auto;
}

.extra {
  position: absolute;
  right: -6px;
  bottom: -6px;
  display: grid;
  place-content: center;
  box-sizing: content-box; // the border is outside
  background-color: var(--token-color-surface-primary);
  border: 1px solid var(--token-color-border-primary);
  box-shadow: var(--token-elevation-low-box-shadow);
}

@each $size in $hds-icon-tile-sizes {
  .size-#{$size} {
    width: map-get($size-props, $size, "size");
    height: map-get($size-props, $size, "size");
    border-radius: map-get($size-props, $size, "border-radius");

    .icon {
      width: map-get($size-props, $size, "icon-size");
      height: map-get($size-props, $size, "icon-size");
    }

    .logo {
      width: map-get($size-props, $size, "logo-size");
      height: map-get($size-props, $size, "logo-size");
    }

    .extra {
      width: map-get($size-props, $size, "extra-size");
      height: map-get($size-props, $size, "extra-size");
      border-radius: map-get($size-props, $size, "extra-border-radius");
    }
  }
}

.type-logo {
  // notice: we are using colored icons so we don't need to set the "color" property here
  background-color: var(--token-color-surface-primary);
  border-color: var(--token-color-border-primary);
}

.type-icon {
  &.color-neutral {
    color: var(--token-color-foreground-faint);
    background-color: var(--token-color-surface-faint);
    border-color: var(--token-color-border-primary);
  }

  @each $product in $hds-icon-tile-colors-products {
    @if ($product == "hcp") {
      // exception for HCP (we use neutral colors, we don't have specific product colors for foreground/background)
      &.color-hcp {
        color: var(--token-color-hcp-brand);
        background-color: var(--token-color-surface-faint);
        border-color: var(--token-color-border-primary);
      }
    } @else {
      &.color-#{$product} {
        color: var(--token-color-#{$product}-foreground);
        background: linear-gradient(135deg, var(--token-color-#{$product}-gradient-faint-start) 0%, var(--token-color-#{$product}-gradient-faint-stop) 100%);
        border-color: var(--token-color-#{$product}-border);
      }
    }
  }
}
