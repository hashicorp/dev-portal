/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

//
// BADGE-COUNT COMPONENT
//

@use "sass:math";

$sizes: ( "small", "medium", "large" );
$border-width: 1px;


.badge-count {
  display: inline-flex;
  align-items: center;
  max-width: 100%;
  font-weight: var(--mds-typography-font-weight-medium);
  font-family: var(--mds-typography-font-stack-text);
  border: $border-width solid transparent;
}

// SIZE

// these values later may come from the design tokens
$size-props: (
  "small": (
    "font-size": 0.8125rem, // 13px
    "height": 1.25rem,
    "line-height": 1.2308, // 16px
    "padding-vertical": 0.125rem,
    "padding-horizontal": 0.5rem,
  ),
  "medium": (
    "font-size": 0.8125rem, // 13px
    "height": 1.5rem,
    "line-height": 1.2308, // 16px
    "padding-vertical": 0.25rem,
    "padding-horizontal": 0.75rem,
  ),
  "large": (
    "font-size": 1rem, // 16px
    "height": 2rem,
    "line-height": 1.5, // 24px
    "padding-vertical": 0.25rem,
    "padding-horizontal": 0.875rem,
  )
);

@each $size in $sizes {
  .size-#{$size} {
    min-height: map-get($size-props, $size, "height");
    padding: calc(#{map-get($size-props, $size, "padding-vertical")} - #{$border-width}) calc(#{map-get($size-props, $size, "padding-horizontal")} - #{$border-width});
    font-size: map-get($size-props, $size, "font-size");
    line-height: map-get($size-props, $size, "line-height");
    border-radius: math.div(map-get($size-props, $size, "height"), 2);
  }
}


// COLOR + TYPE COMBINATIONS

.color-neutral {
  &.type-filled {
    color: var(--token-color-foreground-primary);
    background-color: var(--token-color-surface-strong);
  }

  &.type-inverted {
    color: var(--token-color-foreground-high-contrast);
    background-color: var(--token-color-foreground-faint);
  }

  &.type-outlined {
    color: var(--token-color-foreground-primary);
    background-color: transparent;
    border-color: var(--token-color-foreground-faint);
  }
}

.color-neutral-dark-mode {
  &.type-filled {
    color: var(--token-color-foreground-high-contrast);
    background-color: var(--token-color-foreground-faint);
  }

  &.type-inverted {
    color: var(--token-color-foreground-primary);
    background-color: var(--token-color-surface-faint);
  }

  &.type-outlined {
    color: var(--token-color-foreground-high-contrast);
    background-color: transparent;
    border-color: var(--token-color-palette-neutral-100);
  }
}
