.list-item[disabled],
.list-item[disabled]:hover {
	color: var(--token-color-foreground-disabled);
	cursor: not-allowed;
}

.interactive {
	position: relative;
	min-height: 36px;
	isolation: isolate; /* used to create a new stacking context (needed to have the pseudo element below text/icon but not the parent container) */

	/* need to reset a few extra things to make the button visually appear the same as the link */
	& button {
		width: 100%;
		background-color: transparent;

		&:hover {
			cursor: pointer;
		}
	}

	/* shared styles for links and buttons */
	& a,
	& button {
		display: flex;
		align-items: flex-start;
		padding: 7px 9px 7px 15px; /* notice: we're subtracting 1px because of the transparent border */
		text-decoration: none;
		border: 1px solid transparent; /* because a border for the button is needed for a11y, we apply it to both the button and the link so they have the same height */
		outline-style: solid; /* used to avoid double outline+focus-ring in Safari (see https://github.com/hashicorp/design-system-components/issues/161#issuecomment-1031548656) */
		outline-color: transparent;

		/* this is used for the left "hover" indicator */
		&::before {
			position: absolute;
			top: 6px;
			bottom: 6px;
			left: 4px;
			z-index: -1;
			width: 2px;
			border-radius: 1px;
			content: '';
		}

		/* Notice: this is used for the active/focus states which have very specific positions
		and also has a background color, so we can't use the existing focus-ring mixins */
		&::after {
			position: absolute;
			top: 0;
			right: 4px;
			bottom: 0;
			left: 10px;
			z-index: -1;
			border-radius: 5px;
			content: '';
		}

		/* Notice: to avoid too much duplication we define two local CSS variables
	  and define their values in the color variants below */

		&:hover {
			color: var(--current-color-hover);

			&::before {
				background-color: currentColor;
			}
		}

		/* default focus for browsers that still rely on ":focus" */
		&:focus {
			color: var(--current-color-focus);

			&::after {
				left: 4px;
				box-shadow: var(--current-focus-ring-box-shadow);
			}
		}

		/* undo the previous declaration for browsers that support ":focus-visible" but wouldn't normally show default focus styles */
		&:focus:not(:focus-visible) {
			&::after {
				background-color: transparent;
				box-shadow: none;
			}
		}

		/* set focus for browsers that support ":focus-visible" */
		&:focus-visible {
			color: var(--current-color-focus);

			&::after {
				left: 4px;
				box-shadow: var(--current-focus-ring-box-shadow);
			}
		}

		/* remove the focus ring on "active + focused" state (by design) */
		&:focus:active,
		&:focus-visible:active {
			&::after {
				left: 10px;
				background-color: var(--current-background-color);
				box-shadow: none;
			}
		}

		&:active {
			color: var(--current-color-active);

			&::before {
				background-color: currentColor;
			}
		}
	}
}

.color-action {
	& a,
	& button {
		color: var(--token-color-foreground-primary);

		/* assign the values to the local CSS variables used above */
		--current-color-hover: var(--token-color-foreground-action-hover);
		--current-color-focus: var(--token-color-foreground-action-active);
		--current-color-active: var(--token-color-foreground-action-active);

		&::after {
			--current-focus-ring-box-shadow: var(
				--token-focus-ring-action-box-shadow
			);
		}
	}
}

.color-critical {
	& a,
	& button {
		color: var(--token-color-foreground-critical);

		/* assign the values to the local CSS variables used above */
		--current-color-hover: var(--token-color-palette-red-300);
		--current-color-focus: var(--token-color-palette-red-400);
		--current-color-active: var(--token-color-palette-red-400);

		&::after {
			--current-background-color: var(--token-color-surface-critical);
			--current-focus-ring-box-shadow: var(
				--token-focus-ring-critical-box-shadow
			);
		}
	}
}

.custom {
	display: flex;
	align-items: flex-start;
	padding: 7px 9px 7px 15px;
}

.interactive-icon {
	display: block;
	margin-top: 2px;

	&.leading {
		margin-right: 8px;
	}

	&.trailing {
		margin-left: 8px;
	}
}

.interactive-text {
	flex: 1;
	text-align: left;
}

.loading-wrapper {
	display: flex;
	align-items: center;
	padding: 8px 10px 8px 16px;

	& .interactive-text {
		color: var(--token-color-foreground-faint);
	}

	& .interactive-icon {
		color: var(--token-color-foreground-primary);
	}
}

.text-regular {
	composes: token-typography-body-100 from global;
	composes: mds-typography-font-weight-regular from global;
}

.text-large {
	composes: token-typography-body-200 from global;
	composes: mds-typography-font-weight-medium from global;
}

.separator {
	position: relative;
	width: 100%;
	height: 4px;

	&::before {
		position: absolute;
		right: 6px;
		bottom: 0;
		left: 6px;
		border-bottom: 1px solid var(--token-color-border-primary);
		content: '';
	}
}

.title {
	composes: token-typography-body-100 from global;
	composes: mds-typography-font-weight-semibold from global;
	padding: 10px 16px 4px;
	color: var(--token-color-foreground-strong);
}
