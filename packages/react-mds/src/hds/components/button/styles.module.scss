@use '../../../styles/mixins/button' as *;

$hds-button-border-width: 1px;
$hds-button-focus-border-width: 3px;
$hds-button-border-radius: 5px;

.button {
	@include hds-button();

	// the <a> element behaves differently than a <button>
	@at-root a#{&} {
		width: fit-content;

		// for more background on the use of underlining as defined below read the following document: https://docs.google.com/document/d/1acLxdRqmy92vQ8ArShPxoBFmAV0StsbZrqEic6MVt20
		&:hover,
		&:focus,
		&:active {
			text-decoration: underline;
		}
	}

	// This covers all of the browsers and focus scenarios (due to the custom focus design).
	//
	// IMPORTANT: we need to use also the [disabled] selector because if the "disabled" attribute is applied to a "Button as link",
	// the ":disabled" pseudo-selector is not applied to the element in the browser (rightly) because a link can't be disabled
	// but from the product perspective there may be use cases where they need to have a "Button as link" that looks disabled anyway
	//
	&:disabled,
	&[disabled],
	&:disabled:focus,
	&[disabled]:focus,
	&:disabled:hover,
	&[disabled]:hover {
		@include hds-button-state-disabled();
	}

	&.width-full {
		width: 100%;
		max-width: 100%;

		.text {
			flex: 0 0 auto;
		}
	}

	&:focus {
		@include hds-button-state-focus();
	}
}

.text {
	flex: 1 0 0;
}

.color-primary {
	@include hds-button-color-primary();
}

.color-secondary {
	@include hds-button-color-secondary();
}

.color-tertiary {
	@include hds-button-color-tertiary();
}

.color-critical {
	@include hds-button-color-critical();
}

@mixin mds-button-color-product($product) {
  color: var(--token-color-#{$product}-button-foreground);
  background-color: var(--token-color-#{$product}-button-background);
  border-color: var(--token-color-#{$product}-button-border, var(--token-color-border-primary));
  box-shadow: var(--token-elevation-low-box-shadow);

  &:hover {
    color: var(--token-color-#{$product}-button-foreground);
    background-color: var(--token-color-#{$product}-button-background-hover);
    cursor: pointer;
  }

  &:focus {
    color: var(--token-color-#{$product}-button-foreground);
    background-color: var(--token-color-#{$product}-button-background-focus);

    &::before {
      /* the position absolute of an element is computed from the inside of the border of the container
      so we have to take in account the border width of the pseudo-element container itself
      plus for the primary button we want to have a 2px gap between the button and the focus */
      $shift: $hds-button-border-width + $hds-button-focus-border-width + 2px;
      top: -$shift;
      right: -$shift;
      bottom: -$shift;
      left: -$shift;
      border-color: var(--token-color-focus-action-external);
      border-radius: $hds-button-border-radius + $hds-button-focus-border-width + 2px;
    }
  }

  &:active {
    color: var(--token-color-#{$product}-button-foreground);
    background-color: var(--token-color-#{$product}-button-background-active);
    box-shadow: none;

    &::before {
      border-color: transparent;
    }
  }
}

.color-primary-white {
	@include mds-button-color-product('primary-white');
}

.color-primary-black {
	@include mds-button-color-product('primary-black');
}

.color-secondary-white {
	@include mds-button-color-product('secondary-white');
}

.color-secondary-black {
	@include mds-button-color-product('secondary-black');
}

:global(.mds-dark-mode),
:global([data-theme='dark']) {
	& .color-secondary-high-contrast {
		@include mds-button-color-product('secondary-white');
	}
}

.color-secondary-high-contrast {
	@include mds-button-color-product('secondary-black');
}

.color-boundary {
	@include mds-button-color-product('boundary');
}

.color-consul {
	@include mds-button-color-product('consul');
}

.color-nomad {
	@include mds-button-color-product('nomad');
}

.color-packer {
	@include mds-button-color-product('packer');
}

.color-terraform {
	@include mds-button-color-product('terraform');
}

.color-vagrant {
	@include mds-button-color-product('vagrant');
}

.color-vault {
	@include mds-button-color-product('vault');
}

.color-waypoint {
	@include mds-button-color-product('waypoint');
}

.size-small {
  min-height: 1.75rem;
  padding: 0.375rem 0.6875rem;

	& .text {
		font-size: 0.8125rem;
  	line-height: 0.875rem;
	}

	&.icon-only {
		min-width: 1.75rem;
		padding-right: 0.375rem;
		padding-left: 0.375rem;
	}
}

.size-medium {
  min-height: 2.25rem;
  padding: 0.5625rem 0.9375rem;

	& .text {
		font-size: 0.875rem;
  	line-height: 1rem;
	}

	&.icon-only {
		min-width: 2.25rem;
		padding-right: 0.5625rem;
		padding-left: 0.5625rem;
	}
}

.size-large {
  min-height: 3rem;
  padding: 0.6875rem 1.1875rem;

	& .text {
		font-size: 1rem;
  	line-height: 1.5rem;
	}

	&.icon-only {
		min-width: 3rem;
		padding-right: 0.6875rem;
		padding-left: 0.6875rem;
	}
}