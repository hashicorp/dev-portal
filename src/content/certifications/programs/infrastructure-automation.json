{
	"title": "Infrastructure Automation",
	"summary": {
		"heading": "Infrastructure Automation Certifications",
		"description": "Brief intro. Short but enough to help practitioners take that next step. Suggestion is a max of 5 lines of content. Verify your basic automation skills. If you have passed the existing exams wait until the new version comes out to re-certify."
	},
	"hero": {
		"heading": "Infrastructure Automation Overview",
		"description": "Brief intro. Short but enough to help practitioners take that next step. Suggestion is a max of 5 lines of content. Verify your basic infrastructure automation skills. If you have passed the Terraform Associate wait until the new version comes out to re-certify."
	},
	"certifications": [
		{
			"title": "Terraform Associate 002",
			"links": {
				"prepare": "/terraform/tutorials/certification",
				"register": "https://hashicorp-certifications.zendesk.com/hc/en-us/articles/360049382552"
			},
			"faqItems": [
				{
					"title": "Exam Experience",
					"content": "Certification exams are taken online with a live proctor. This means that all locations and time zones are accommodated. Online proctoring provides the same benefits of a physical test center while being more accessible to exam-takers.\n\nThe live proctor verifies the exam-taker’s identity, walks them through rules and procedures, and watches them take the exam. Be sure to follow the instructions on your exam appointment confirmation email about how to prepare your computer and physical environment to take the exam."
				},
				{
					"title": "Prerequisites",
					"content": "- Basic terminal skills\n- Basic understanding of on premises and cloud architecture"
				},
				{
					"title": "Product Version Tested",
					"content": "Terraform 1.0 and higher."
				},
				{
					"title": "Preparing for the Exam",
					"content": "Certification preparation learning guides for the new version of the Terraform Associate will be posted soon. For now, use the current [Terraform Associate Tutorial List](https://developer.hashicorp.com/terraform/tutorials/certification-associate-tutorials) to start your studying."
				},
				{
					"title": "Exam Details",
					"content": "|               |                                                                               |\n| ------------------- | --------------------------------------------------------------------------------- |\n| **Assessment Type** | Multiple choice                                                                   |\n| **Format**          | Online proctored                                                                  |\n| **Duration**        | 1 hour                                                                            |\n| **Price**           | $70.50 USD, plus locally applicable taxes and fees. Free retake **not included**. |\n| **Language**        | English                                                                           |\n| **Expiration**      | 2 years                                                                           |"
				},
				{
					"title": "Exam Objectives",
					"content": "| 1   | Understand infrastructure as code (IaC) concepts |\n| --- | ------------------------------------------------ |\n| 1a  | Explain what IaC is                              |\n| 1b  | Describe advantages of IaC patterns              |\n\n| 2   | Understand the purpose of Terraform (vs other IaC) |\n| --- | -------------------------------------------------- |\n| 2a  | Explain multi-cloud and provider-agnostic benefits |\n| 2b  | Explain the benefits of state                      |\n\n| 3   | Understand Terraform basics                            |\n| --- | ------------------------------------------------------ |\n| 3a  | Install and version Terraform providers                |\n| 3b  | Describe plugin-based architecture                     |\n| 3c  | Write Terraform configuration using multiple providers |\n| 3d  | Describe how Terraform finds and fetches providers     |\n\n| 4   | Use Terraform outside of core workflow                                                              |\n| --- | --------------------------------------------------------------------------------------------------- |\n| 4a  | Describe when to use `terraform import` to import existing infrastructure into your Terraform state |\n| 4b  | Use `terraform state` to view Terraform state                                                       |\n| 4c  | Describe when to enable verbose logging and what the outcome/value is                               |\n\n| 5   | Interact with Terraform modules                                                                 |\n| --- | ----------------------------------------------------------------------------------------------- |\n| 5a  | Contrast and use different module source options including the public Terraform Module Registry |\n| 5b  | Interact with module inputs and outputs                                                         |\n| 5c  | Describe variable scope within modules/child modules                                            |\n| 5d  | Set module version                                                                              |\n\n| 6   | Use the core Terraform workflow                                             |\n| --- | --------------------------------------------------------------------------- |\n| 6a  | Describe Terraform workflow ( Write -> Plan -> Create )                     |\n| 6b  | Initialize a Terraform working directory (`terraform init`)                 |\n| 6c  | Validate a Terraform configuration (`terraform validate`)                   |\n| 6d  | Generate and review an execution plan for Terraform (`terraform plan`)      |\n| 6e  | Execute changes to infrastructure with Terraform (`terraform apply`)        |\n| 6f  | Destroy Terraform managed infrastructure (`terraform destroy`)              |\n| 6g  | Apply formatting and style adjustments to a configuration (`terraform fmt`) |\n\n| 7   | Implement and maintain state                                    |\n| --- | --------------------------------------------------------------- |\n| 7a  | Describe default `local` backend                                |\n| 7b  | Describe state locking                                          |\n| 7c  | Handle backend and cloud integration authentication methods     |\n| 7d  | Differentiate remote state back end options                     |\n| 7e  | Manage resource drift and Terraform state                       |\n| 7f  | Describe `backend` block and cloud integration in configuration |\n| 7g  | Understand secret management in state files                     |\n\n| 8   | Read, generate, and modify configuration                                      |\n| --- | ----------------------------------------------------------------------------- |\n| 8a  | Demonstrate use of variables and outputs                                      |\n| 8b  | Describe secure secret injection best practice                                |\n| 8c  | Understand the use of collection and structural types                         |\n| 8d  | Create and differentiate `resource` and `data` configuration                  |\n| 8e  | Use resource addressing and resource parameters to connect resources together |\n| 8f  | Use HCL and Terraform functions to write configuration                        |\n| 8g  | Describe built-in dependency management (order of execution based)            |\n\n| 9   | Understand Terraform Cloud capabilities                           |\n| --- | ----------------------------------------------------------------- |\n| 9a  | Explain how Terraform Cloud helps to manage infrastructure        |\n| 9b  | Describe how Terraform Cloud enables collaboration and governance |"
				}
			]
		},
		{
			"title": "Terraform Associate 003",
			"faqItems": [
				{
					"title": "Which Exam To Take",
					"content": "The `Terraform Associate 002` certification is still relevant and will be accepted as a validation of Terraform knowledge until each individual badge’s expiration date. Receiving a Terraform Associate 003 certification will not impact any existing Terraform Associate 002 credentials, and a single candidate can hold both at the same time. However, either certification alone can be used to validate Terraform knowledge at the associate level.\n\n- **If you have passed the Terraform Associate** wait until the new version comes out to recertify. We have extended all current badge expirations dates so you have time to wait for the new exam.\n- **If you have never passed the Terraform Associate exam** the choice is up to you and your timeline."
				},
				{
					"title": "Timeline TBA",
					"content": "The Terraform Associate 002 certification is available today and will become unavailable shortly after 003 is released. Exact timelines are coming soon.\n\n![](https://www.datocms-assets.com/2885/1654637486-terraform-associate-002-vs-003-timeline.png)"
				},
				{
					"title": "Prerequisites",
					"content": "- Basic terminal skills\n- Basic understanding of on premises and cloud architecture"
				},
				{
					"title": "Product Version Tested",
					"content": "Terraform 1.0 and higher."
				},
				{
					"title": "Preparing for the Exam",
					"content": "Certification preparation learning guides for the new version of the Terraform Associate will be posted soon. For now, use the current [Terraform Associate Tutorial List](https://developer.hashicorp.com/terraform/tutorials/certification-associate-tutorials) to start your studying."
				},
				{
					"title": "Exam Details",
					"content": "|               |                                                                               |\n| ------------------- | --------------------------------------------------------------------------------- |\n| **Assessment Type** | Multiple choice                                                                   |\n| **Format**          | Online proctored                                                                  |\n| **Duration**        | 1 hour                                                                            |\n| **Price**           | $70.50 USD, plus locally applicable taxes and fees. Free retake **not included**. |\n| **Language**        | English                                                                           |\n| **Expiration**      | 2 years                                                                           |"
				},
				{
					"title": "Exam Objectives",
					"content": "| 1   | Understand infrastructure as code (IaC) concepts |\n| --- | ------------------------------------------------ |\n| 1a  | Explain what IaC is                              |\n| 1b  | Describe advantages of IaC patterns              |\n\n| 2   | Understand the purpose of Terraform (vs other IaC) |\n| --- | -------------------------------------------------- |\n| 2a  | Explain multi-cloud and provider-agnostic benefits |\n| 2b  | Explain the benefits of state                      |\n\n| 3   | Understand Terraform basics                            |\n| --- | ------------------------------------------------------ |\n| 3a  | Install and version Terraform providers                |\n| 3b  | Describe plugin-based architecture                     |\n| 3c  | Write Terraform configuration using multiple providers |\n| 3d  | Describe how Terraform finds and fetches providers     |\n\n| 4   | Use Terraform outside of core workflow                                                              |\n| --- | --------------------------------------------------------------------------------------------------- |\n| 4a  | Describe when to use `terraform import` to import existing infrastructure into your Terraform state |\n| 4b  | Use `terraform state` to view Terraform state                                                       |\n| 4c  | Describe when to enable verbose logging and what the outcome/value is                               |\n\n| 5   | Interact with Terraform modules                                                                 |\n| --- | ----------------------------------------------------------------------------------------------- |\n| 5a  | Contrast and use different module source options including the public Terraform Module Registry |\n| 5b  | Interact with module inputs and outputs                                                         |\n| 5c  | Describe variable scope within modules/child modules                                            |\n| 5d  | Set module version                                                                              |\n\n| 6   | Use the core Terraform workflow                                             |\n| --- | --------------------------------------------------------------------------- |\n| 6a  | Describe Terraform workflow ( Write -> Plan -> Create )                     |\n| 6b  | Initialize a Terraform working directory (`terraform init`)                 |\n| 6c  | Validate a Terraform configuration (`terraform validate`)                   |\n| 6d  | Generate and review an execution plan for Terraform (`terraform plan`)      |\n| 6e  | Execute changes to infrastructure with Terraform (`terraform apply`)        |\n| 6f  | Destroy Terraform managed infrastructure (`terraform destroy`)              |\n| 6g  | Apply formatting and style adjustments to a configuration (`terraform fmt`) |\n\n| 7   | Implement and maintain state                                    |\n| --- | --------------------------------------------------------------- |\n| 7a  | Describe default `local` backend                                |\n| 7b  | Describe state locking                                          |\n| 7c  | Handle backend and cloud integration authentication methods     |\n| 7d  | Differentiate remote state back end options                     |\n| 7e  | Manage resource drift and Terraform state                       |\n| 7f  | Describe `backend` block and cloud integration in configuration |\n| 7g  | Understand secret management in state files                     |\n\n| 8   | Read, generate, and modify configuration                                      |\n| --- | ----------------------------------------------------------------------------- |\n| 8a  | Demonstrate use of variables and outputs                                      |\n| 8b  | Describe secure secret injection best practice                                |\n| 8c  | Understand the use of collection and structural types                         |\n| 8d  | Create and differentiate `resource` and `data` configuration                  |\n| 8e  | Use resource addressing and resource parameters to connect resources together |\n| 8f  | Use HCL and Terraform functions to write configuration                        |\n| 8g  | Describe built-in dependency management (order of execution based)            |\n\n| 9   | Understand Terraform Cloud capabilities                           |\n| --- | ----------------------------------------------------------------- |\n| 9a  | Explain how Terraform Cloud helps to manage infrastructure        |\n| 9b  | Describe how Terraform Cloud enables collaboration and governance |"
				}
			]
		}
	]
}
