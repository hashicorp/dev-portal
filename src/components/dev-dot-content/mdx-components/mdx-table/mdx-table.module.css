/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

.root {
	--bg: var(--token-color-palette-neutral-50);
	--border: var(--token-color-palette-alpha-200);
	--radius: 6px;

	position: relative;
}

.tableWrapper {
	margin: 24px 0;
	max-height: 50vh;
	overflow: auto;

	&[tabindex='0'] {
		&:focus {
			outline: transparent;
		}

		&:focus-visible {
			outline: transparent;

			& ~ .tableFocusRing {
				box-shadow: var(--token-focus-ring-action-box-shadow);
			}
		}
	}

	& table {
		border-spacing: 0;
		width: 100%;

		& thead {
			& th {
				padding: 8px 12px;
				background: var(--bg);
				border-bottom: 1px solid var(--border);
				border-top: 1px solid var(--border);
				border-right: 1px solid var(--border);

				&:first-child {
					border-top-left-radius: var(--radius);
					border-left: 1px solid var(--border);
				}

				&:last-child {
					border-top-right-radius: var(--radius);
				}

				&:not([align]) {
					text-align: left;
				}
			}
		}

		& tbody {
			& tr {
				& td {
					padding: 8px 12px;
					border-bottom: 1px solid var(--border);
					border-right: 1px solid var(--border);
					vertical-align: top;

					&:first-child {
						border-left: 1px solid var(--border);
					}
				}

				&:nth-child(even) {
					background: var(--bg);
				}

				&:last-child {
					& td:first-child {
						border-bottom-left-radius: var(--radius);
					}
					& td:last-child {
						border-bottom-right-radius: var(--radius);
					}
				}
			}
		}
	}
}

.scrim {
	--scrim-size: 60px;

	content: '';
	opacity: 0;
	pointer-events: none;
	position: absolute;

	/* Only enable animation if query is supported and value is no-preference */
	@media (prefers-reduced-motion: no-preference) {
		transition: opacity 0.25s;
	}

	&.showScrim {
		opacity: 1;
	}
}

.topScrim {
	composes: scrim;
	background: linear-gradient(to bottom, #ffff, #fff0) top;
	height: var(--scrim-size);
	left: 1px;
	right: var(--vertical-scrollbar-width);
	top: 0;
}

.bottomScrim {
	composes: scrim;
	background: linear-gradient(to top, #ffff, #fff0) bottom;
	bottom: var(--horizontal-scrollbar-width);
	height: var(--scrim-size);
	left: 1px;
	right: var(--vertical-scrollbar-width);
}

.leftScrim {
	composes: scrim;
	background: linear-gradient(to right, #ffff, #fff0) left;
	bottom: var(--horizontal-scrollbar-width);
	left: 0;
	top: 1px;
	width: var(--scrim-size);
}

.rightScrim {
	composes: scrim;
	background: linear-gradient(to left, #ffff, #fff0) right;
	bottom: var(--horizontal-scrollbar-width);
	right: var(--vertical-scrollbar-width);
	top: 1px;
	width: var(--scrim-size);
}

/**
 * Why `pointer-events: none`? (https://stackoverflow.com/a/6441884)
 * 
 * To allow mouse/touch events to "pass through" this absolutely position
 * element. Otherwise, this element would receive the events and scrolling on
 * the `overflow: auto` element above would be blocked.
 */
.tableFocusRing {
	border-radius: var(--radius);
	bottom: 0;
	left: 0;
	pointer-events: none;
	position: absolute;
	right: 0;
	top: 0;
	z-index: 1;
}
