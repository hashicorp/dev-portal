/* TODO: abstract shared input styles when there are more input components */

.sharedFlexCentering {
	align-items: center;
	display: flex;
	justify-content: center;
}

.sharedIconColorAndPositioning {
	color: var(--token-color-palette-neutral-500);
	position: absolute;
	top: calc((var(--input-height) - var(--input-icon-size)) / 2);
}

.filterInputContainer {
	--input-padding: 8px;

	height: var(--input-height);
	margin-bottom: 16px;
	position: relative;
}

.filterIcon {
	composes: sharedFlexCentering sharedIconColorAndPositioning;
	left: var(--input-padding);
}

.clearButton {
	composes: sharedFlexCentering sharedIconColorAndPositioning;
	background-color: transparent;
	border: none;
	display: flex;
	height: var(--input-icon-size);
	padding: 0;
	right: var(--input-padding);
	width: var(--input-icon-size);

	&:hover {
		cursor: pointer;
	}
}

.clearIcon {
	composes: sharedFlexCentering;
}

.filterInput {
	composes: g-focus-ring-from-box-shadow from global;
	appearance: none;
	background-color: transparent;
	border: none;
	border-radius: 5px;
	box-shadow: var(--token-surface-inset-box-shadow);
	color: var(--token-color-palette-neutral-700);
	font-size: 16px;
	line-height: 18px;
	padding-bottom: 9px;
	padding-left: calc(var(--input-padding) * 2 + var(--input-icon-size));
	padding-right: calc(var(--input-padding) * 2 + var(--input-icon-size));
	padding-top: 9px;
	position: relative;
	width: 100%;

	&::placeholder {
		color: var(--token-color-palette-neutral-500);
		opacity: 1;
	}

	&:hover {
		cursor: text;
	}
}
