@custom-media --nav-header-is-mobile (max-width: 1200px);
@custom-media --nav-header-is-desktop (min-width: 1201px);

/*
***
* Class for the main container.
***
* Note: `min-height` is needed on the home page because the
* `NavigationHeaderDropdownMenu` buttons that are intended to make the header
* grow are only inside of the absolutely positioned `nav` element. On the
* product pages, the main menu is a `NavigationHeaderDropdownMenu` button
* located inside of an element that's not absolutely positioned.
***
*/
.root {
	--header-padding-left-right: 24px;
	--header-dropdown-menu-padding-left-right: 12px;

	background-color: var(--token-color-palette-neutral-700);
	display: flex;
	padding-top: 0;
	padding-bottom: 0;
	justify-content: space-between;
	padding-left: var(--header-padding-left-right);
	padding-right: var(--header-padding-left-right);
	position: relative;
	width: 100%;

	@media (--nav-header-is-mobile) {
		padding-bottom: 14px;
		padding-top: 14px;
	}
}

.leftSide {
	align-items: center;
	display: flex;
	justify-content: left;
}

.leftSideDesktopOnlyContent {
	@media (--nav-header-is-mobile) {
		display: none;
	}
}

/*
***
* Note: these are all classes that get passed to `InlineSvg`. They need
* `display: flex` set or there will be a small gap below the SVG, making them
* off-center vertically.
***
*/
.productLogo {
	display: flex;

	& svg {
		height: 40px;
		width: auto;
	}
}

.rightSide {
	align-items: center;
	display: flex;
	justify-content: right;
	gap: 16px;
}

/*
***
* Note: this fancy math is used for two reasons. First, to make sure the <nav>
* items are always locatated in the same place in the header (when they're
* visible). Second, which explains the precise values, to make sure the text of
* the first <nav> item left-aligns with the text of the page content when there
* is no extra space on the left or right side of it.
***
*/
.contentBeforeNav {
	align-items: center;
	display: flex;
	justify-content: left;

	@media (--nav-header-is-desktop) {
		width: calc(
			var(--dev-dot-sidebar-width) + var(--main-area-padding-left) -
				var(--header-padding-left-right) -
				var(--header-dropdown-menu-padding-left-right)
		);
	}
}

.navList {
	align-items: center;
	display: flex;
	list-style: none;
	margin: 0;
	padding: 0;
}

.mobileMenuButton {
	align-items: center;
	background-color: transparent;
	border-radius: 5px;
	border: 1px solid transparent;
	color: var(--token-color-foreground-high-contrast);
	display: flex;
	justify-content: center;
	padding: 5px;

	&:hover {
		border: 1px solid var(--token-color-palette-neutral-200);
	}

	@media (--nav-header-is-desktop) {
		display: none;
	}
}

.authenticationControls {
	/* properties */
	align-items: center;
	display: flex;
	gap: 16px;

	@media (--nav-header-is-mobile) {
		display: none;
	}
}

.signUpLink {
	color: var(--token-color-foreground-high-contrast);

	&:hover {
		color: var(--token-color-foreground-high-contrast);
	}
}

.userDropdownDisclosure button[aria-expanded] {
	background-color: transparent;
	color: var(--token-color-foreground-high-contrast);

	&:hover {
		border-color: var(--token-color-palette-neutral-200);
	}
}
