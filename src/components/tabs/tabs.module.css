/*
NOTE: This file uses `role` selectors to apply styles because it ensures that
the correct elements, roles, states, and properties are being set in the markup.
*/

.tabControls {
  /*
  Styles for showing a bottom border on the tab buttons container.
  */
  &.showAnchorLine {
    border-bottom: 1px solid var(--token-color-palette-neutral-200);
    padding-bottom: 16px;

    /* No border if allowNestedStyles for all tabs (whether nested or not) */
    &.allowNestedStyles {
      border-bottom: none;
    }
  }
}

/*
Styles for each tab panel.

Since `aria-hidden` does not have perfect screen reader support, we can maximize
compatibility by using it as a selector to apply additional styles. This also
keeps us from having to set styles in the JSX.

ref: https://twitter.com/heydonworks/status/408263890284191745
ref: https://twitter.com/MarcoInEnglish/status/363284092806119424
*/
.tabPanel[role='tabpanel'] {
  /* Note: g-focus-ring-from-box-shadow added in JSX */
  border-radius: 6px;

  &[aria-hidden='true'] {
    display: none;
    visibility: hidden;
  }

  &.allowNestedStyles:not(.isNested) {
    box-shadow: var(--token-surface-base-box-shadow);
    padding: 16px;
  }

  & > *:first-child {
    margin-top: 0 !important;
  }

  & > *:last-child {
    margin-bottom: 0 !important;
  }
}
