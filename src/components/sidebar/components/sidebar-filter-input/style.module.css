/* TODO: abstract shared input styles when there are more input components */

.sharedFlexCentering {
  align-items: center;
  display: flex;
  justify-content: center;
}

.sharedIconColorAndPositioning {
  color: var(--token-color-palette-neutral-500);
  position: absolute;
  top: calc((var(--input-height) - var(--input-icon-size)) / 2);
}

.filterInputContainer {
  --input-padding: 8px;

  height: var(--input-height);
  margin-bottom: 24px;
  position: relative;
}

.filterIcon {
  composes: sharedFlexCentering sharedIconColorAndPositioning;
  left: var(--input-padding);
}

.clearButton {
  composes: sharedFlexCentering sharedIconColorAndPositioning;
  background-color: transparent;
  border: none;
  display: flex;
  height: var(--input-icon-size);
  padding: 0;
  right: var(--input-padding);
  width: var(--input-icon-size);

  &:hover {
    cursor: pointer;
  }
}

.clearIcon {
  composes: sharedFlexCentering;
}

.filterInput {
  composes: focus-border-and-box-shadow-light from global;
  background-color: transparent;
  border-color: var(--token-elevation-inset-border-color);
  border-radius: 5px;
  border-style: solid;
  border-width: var(--token-elevation-inset-border-width);
  color: var(--token-color-palette-neutral-700);
  font-size: 14px;
  line-height: 18px;
  padding-bottom: 9px;
  padding-left: calc(var(--input-padding) * 2 + var(--input-icon-size));
  padding-right: calc(var(--input-padding) * 2 + var(--input-icon-size));
  padding-top: 9px;
  position: relative;
  width: 100%;

  &::placeholder {
    color: var(--token-color-palette-neutral-500);
  }

  &:hover:not(:focus),
  &:not([value='']) {
    cursor: text;
  }
}
