/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: MPL-2.0
 */

/*

Common styles

*/

/* Split this out as it's a common pattern.
   At some point, it might make sense to abstract it or add it
	 at a global .css level. */
.listResetStyles {
	list-style: none;
	margin: 0;
	padding: 0;
	width: 100%;
}

/* Description styles markdown content. Note we do not use MDX in this
   case, so specific styles we want for markdown content will need
	 to be added here. */
.description {
	color: var(--token-color-foreground-faint);
	& p {
		margin: 0;
	}
}

/*

Base properties, at the top level

*/

.baseRoot {
	composes: g-offset-scroll-margin-top from global;
	display: flex;
	flex-direction: column;
	gap: 4px;

	--tree-line-color: var(--token-color-border-primary);
	--tree-line-width: 1px;
}

.baseMetaAndDescription {
	display: flex;
	flex-direction: column;
	gap: 8px;
}

.baseMeta {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: 6px;
}

.baseType {
	composes: hds-typography-code-200 from global;
	color: var(--token-color-foreground-primary);
}

/* Style markdown rendered within the description */
.baseDescription {
	composes: hds-typography-body-200 from global;
	composes: description;

	&.hasNestedProperties {
		padding-bottom: 4px;
	}
}

/*

List of nested properties

*/

.listNestedProperties {
	composes: listResetStyles;
}

/*

Nested properties

*/

.nestedRoot {
	composes: g-offset-scroll-margin-top from global;
}

.nestedMetaAndDescription {
	display: flex;
	flex-direction: column;
	gap: 4px;
}

.nestedMeta {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: 6px;
	padding: 8px 0;
}

.nestedNameAndType {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	gap: 6px;
}

.nestedName {
	composes: hds-typography-code-100 from global;
	background: var(--token-color-surface-strong);
	border-radius: 5px;
	color: var(--token-color-foreground-strong);
	padding: 2px 4px 3px 4px;
}

.nestedType {
	composes: hds-typography-code-100 from global;
	color: var(--token-color-foreground-primary);
}

.nestedDescription {
	composes: hds-typography-body-100 from global;
	composes: description;
	position: relative;
	top: -4px;
}

/*

Tree content styling

*/

.treeContent {
	display: flex;
	gap: 4px;
	padding-left: 8px;

	&.hideIndicator {
		padding-left: 0;
	}
}

.treeIndicatorContainer {
	position: relative;
	width: 8px;
}

.treeIndicator {
	position: absolute;
	top: 0;
	height: 100%;
	width: 100%;
	border-width: var(--tree-line-width);
	border-color: var(--tree-line-color);
	border-left-style: solid;

	&.hideBorder {
		border-color: transparent;
	}

	/* Add horizontal line leading to from the "nesting line" to the item */
	&.isMiddleItem::after {
		position: absolute;
		content: '';
		top: 50%;
		width: 100%;
		border-bottom: var(--tree-line-width) solid var(--tree-line-color);
	}

	/* Modify the "nesting line" to curve towards the item" */
	&.isLastItem {
		height: 55%;
		border-bottom-style: solid;
		border-bottom-left-radius: 4px;
	}
}
